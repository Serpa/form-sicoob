import Template from "@/components/Template";
import { Button, Card, Form, Input, Select } from "antd";
import { SaveOutlined } from "@ant-design/icons";
import Head from "next/head";
import { useSnackbar } from "notistack";
import { useState } from "react";
import axios from "axios";
import useSWR from "swr";
import { useSession } from "next-auth/react"

const fetcher = (url) => axios.get(url).then((res) => res.data);

export default function RegisterAdmin() {
  const session = useSession()
  const { enqueueSnackbar } = useSnackbar();
  const [loading, setLoading] = useState(false)
  const [form] = Form.useForm();
  const [form2] = Form.useForm();
  const { data, error, mutate, isLoading } = useSWR(
    "/api/getUsers",
    fetcher
  );

  const onFinish = async (values) => {
    setLoading(true)
    try {
      const registerUserAdmin = await axios.post('/api/registerAdmin', values)
      if (registerUserAdmin.status === 200)
        form.resetFields()
      enqueueSnackbar('Usuário cadastrado com sucesso!', { variant: 'success' })
      setLoading(false)
    } catch (error) {
      enqueueSnackbar('Erro ao cadastrar!', { variant: 'error' })
      setLoading(false)
    }
  };

  const onFinish2 = async (values) => {
    if (!values.id || !values.password) return null
    setLoading(true)
    try {
      const updateUser = await axios.put('/api/resetPassword', values)
      if (updateUser.status === 200)
        form2.resetFields()
      enqueueSnackbar('Senha alterada com sucesso!', { variant: 'success' })
      setLoading(false)
    } catch (error) {
      enqueueSnackbar('Erro ao alterar!', { variant: 'error' })
      setLoading(false)
    }
  };
  const onFinishFailed = (errorInfo) => {
    console.log("Failed:", errorInfo);
  };

  let options = data?.map((user) => {
    return {
      value: user.id,
      label: user.email,
    };
  });

  if (isLoading) return null
  if (error) return null
  return (
    <>
      <Head>
        <title>Formulário Sicoob - Registro Administrador</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Template menu={"9"}>
        {session.status === 'authenticated' && session.data.user?.email === 'informatica@sicoobfrutal.com.br' &&
          <div className="mx-auto max-w-screen-xl px-4 py-16 sm:px-6 lg:px-8 flex justify-center items-center flex-col space-y-5">

            <p className="text-2xl">Cadastro de Administrador do Sistema.</p>
            <div className="mx-auto max-w-lg text-center flex justify-center items-center">

              <Form
                form={form}
                layout="vertical"
                onFinish={onFinish}
                onFinishFailed={onFinishFailed}
                autoComplete="off"
                style={{
                  minWidth: 400,
                }}
              >

                <Form.Item
                  label="Nome"
                  name="name"
                  rules={[
                    {
                      required: false,
                      message: "Preencha o nome do usuário.",
                      min: 3
                    },
                  ]}
                >
                  <Input />
                </Form.Item>

                <Form.Item
                  label="E-mail"
                  name="email"
                  rules={[
                    {
                      required: true,
                      message: "Preencha o e-mail do usuário.",
                      type: 'email'
                    },
                  ]}
                >
                  <Input />
                </Form.Item>

                <Form.Item
                  label="Senha"
                  name="password"
                  rules={[
                    {
                      required: true,
                      message: "Preencha a senha do usuário.",
                      min: 6
                    },
                  ]}
                >
                  <Input type="password" />
                </Form.Item>

                <Form.Item
                >
                  <Button type="text" htmlType="submit" icon={<SaveOutlined />} loading={loading}>
                    Cadastrar
                  </Button>
                </Form.Item>
              </Form>
            </div>

            <Card title='Alterar Senha' >
              <Form
                form={form2}
                layout="vertical"
                onFinish={onFinish2}
                autoComplete="off"
                style={{
                  minWidth: 400,
                }}
                className="flex flex-col justify-center"
              >

                <Form.Item
                  label="Usuário"
                  name="id"
                  rules={[
                    {
                      required: true,
                      message: "Selecione um usuário.",
                    },
                  ]}
                >
                  <Select
                    showSearch
                    style={{ width: "400px" }}
                    placeholder="Selecione um Usuário"
                    optionFilterProp="children"
                    filterOption={(input, option) =>
                      (option?.label ?? "").includes(input)
                    }
                    filterSort={(optionA, optionB) =>
                      (optionA?.label ?? "")
                        .toLowerCase()
                        .localeCompare((optionB?.label ?? "").toLowerCase())
                    }
                    options={options}
                  />
                </Form.Item>

                <Form.Item
                  label="Senha"
                  name="password"
                  rules={[
                    {
                      required: true,
                      message: "Preencha a senha do usuário.",
                      min: 6
                    },
                  ]}
                >
                  <Input type="password" />
                </Form.Item>

                <Button htmlType="submit" loading={loading}>Resetar Senha</Button>
              </Form>
            </Card>
          </div>
        }
      </Template>
    </>
  );
}
