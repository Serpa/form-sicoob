import Template from "@/components/Template";
import { Button, Form, Input } from "antd";
import { SaveOutlined } from "@ant-design/icons";
import Head from "next/head";
import { useSnackbar } from "notistack";
import { useState } from "react";
import axios from "axios";

export default function RegisterAdmin() {
  const { enqueueSnackbar } = useSnackbar();
  const [loading, setLoading] = useState(false)
  const [form] = Form.useForm();

  const onFinish = async (values) => {
    setLoading(true)
    try {
      const registerUserAdmin = await axios.post('/api/registerAdmin', values)
      console.log(registerUserAdmin);
      if (registerUserAdmin.status === 200)
        form.resetFields()
      enqueueSnackbar('Usuário cadastrado com sucesso!', { variant: 'success' })
      setLoading(false)
    } catch (error) {
      enqueueSnackbar('Erro ao cadastrar!', { variant: 'error' })
      setLoading(false)
    }
  };
  const onFinishFailed = (errorInfo) => {
    console.log("Failed:", errorInfo);
  };

  return (
    <>
      <Head>
        <title>Formulário Sicoob - Registro Administrador</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Template menu={"9"}>
        <div className="mx-auto max-w-screen-xl px-4 py-16 sm:px-6 lg:px-8 flex justify-center items-center flex-col space-y-5">
          <p className="text-2xl">Cadastor de Administrador de Sistema.</p>
          <div className="mx-auto max-w-lg text-center flex justify-center items-center">
            <Form
              form={form}
              layout="vertical"
              onFinish={onFinish}
              onFinishFailed={onFinishFailed}
              autoComplete="off"
              style={{
                minWidth: 500,
              }}
            >

              <Form.Item
                label="Nome"
                name="name"
                rules={[
                  {
                    required: false,
                    message: "Preencha o nome do usuário.",
                    min: 3
                  },
                ]}
              >
                <Input />
              </Form.Item>

              <Form.Item
                label="E-mail"
                name="email"
                rules={[
                  {
                    required: true,
                    message: "Preencha o e-mail do usuário.",
                    type: 'email'
                  },
                ]}
              >
                <Input />
              </Form.Item>

              <Form.Item
                label="Senha"
                name="password"
                rules={[
                  {
                    required: true,
                    message: "Preencha a senha do usuário.",
                    min: 6
                  },
                ]}
              >
                <Input type="password" />
              </Form.Item>

              <Form.Item
              >
                <Button type="text" htmlType="submit" icon={<SaveOutlined />} loading={loading}>
                  Cadastrar
                </Button>
              </Form.Item>
            </Form>
          </div>

          <div className="grid justify-items-start"></div>
        </div>
      </Template>
    </>
  );
}
